{"version":3,"sources":["components/SplashScreen/SplashScreen.module.scss","components/Main/Main.module.scss","components/ApiKeyModal/ApiKeyModal.module.scss","views/FileRebuildPerformanceTest/RunTestsView/RunTestsView.module.scss","components/GlasswallNav/Nav/Nav.module.scss","components/GlasswallNav/NavBar/NavBar.module.scss","components/GlasswallNav/NavButton/NavButton.module.scss","components/GlasswallNav/ExpandButton/ExpandButton.module.scss","views/SplashScreenView/SplashScreenView.module.scss","components/Modal/Modal.module.scss","views/FileRebuildPerformanceTest/ResultsView/ResultsTable/ResultsTable.module.scss","views/FileRebuildPerformanceTest/ResultsView/ResultsView.module.scss","App.module.scss","components/GlasswallLogo/GlasswallLogo.module.scss","components/GlasswallNav/NavSpacer/NavSpacer.module.scss","components/GlasswallNav/NavLabel/NavLabel.module.scss","components/GlasswallTable/GlasswallTable.module.scss","components/RunningTests/RunningTests.module.scss","components/GlasswallLogo/GlasswallLogo.tsx","components/GlasswallNav/NavBar/NavBar.tsx","components/GlasswallNav/Nav/Nav.tsx","components/GlasswallNav/NavButton/NavButton.tsx","components/GlasswallNav/ExpandButton/ExpandButton.tsx","components/GlasswallNav/NavSpacer/NavSpacer.tsx","components/GlasswallNav/NavLabel/NavLabel.tsx","components/Main/Main.tsx","components/SplashScreen/SplashScreen.tsx","views/SplashScreenView/SplashScreenView.tsx","views/ArchitectureView/ArchitectureView.tsx","components/Events/ClickHandler.tsx","components/Modal/Modal.tsx","components/ApiKeyModal/Header.tsx","components/ApiKeyModal/Body.tsx","components/ApiKeyModal/CloseButton.tsx","components/ApiKeyModal/ApiKeyModal.tsx","components/GlasswallTable/GlasswallTable.tsx","views/FileRebuildPerformanceTest/ResultsView/ResultsTable/ResultsTable.tsx","views/FileRebuildPerformanceTest/ResultsView/ResultsView.tsx","components/RunningTests/RunningTests.tsx","views/FileRebuildPerformanceTest/RunTestsView/RunTestsView.tsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","GlasswallLogo","props","className","styles","defaultLogo","style","background","data-testid","NavBar","navBar","expanded","logo","children","Nav","nav","menuExpanded","bottom","scrollContainer","NavButton","button","selected","onClick","clickHandler","ExpandButton","NavSpacer","spacer","NavLabel","label","Main","showTitle","undefined","title","console","error","pageHeading","main","content","SplashScreen","splashContainer","logoContainer","headingContainer","heading","subHeading","childContainer","SplashScreenView","input","type","placeholder","onChange","e","changeHandler","target","value","required","submitApiKey","ArchitectureView","useEffect","onLoad","ClickHandler","ref","useRef","useCallback","event","current","contains","onClickOutside","onClickInside","document","body","addEventListener","removeEventListener","defaultProps","ModalContents","overlay","container","Modal","modalRoot","querySelector","ReactDOM","createPortal","CSSTransition","in","isOpen","classNames","timeout","transitionTimeout","unmountOnExit","onExited","onExitCallback","Fragment","Header","header","Body","useState","apiKey","setApiKey","onSubmit","preventDefault","submitFunction","CloseButton","closeAction","tabIndex","close","ApiKeyModal","onCloseAction","GlasswallTable","table","ResultsTable","results","map","row","resultRow","key","timestamp","datetimeString","Date","toLocaleString","replace","result","requestId","name","fileSize","metricFilesize","Math","floor","metricDetect","metricRebuild","metricUpload","metricDownload","responseTime","version","ResultsView","fun","loading","setLoading","setResults","apiKeyIsInvalid","setApiKeyIsInvalid","modalIsOpen","setModalIsOpen","getResults","a","fetch","method","headers","response","json","responseString","ok","JSON","parse","message","status","submitNewApiKey","newApiKey","updateApiKey","resultsPageContainer","buttonLink","RunningTests","tests","setTests","getTests","url","length","colSpan","textAlign","test","group","RunTestsView","runNewTest","alert","runTestsPageContainer","newTestContainer","newTest","runningTests","App","apiKeyConfirmed","setApiKeyConfirmed","mainTitle","setMainTitle","navExpanded","setNavExpanded","app","mainContainer","to","exact","path","Boolean","window","location","hostname","match","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e163a4ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"splashContainer\":\"SplashScreen_splashContainer__2Y4yr\",\"logoContainer\":\"SplashScreen_logoContainer__29gQW\",\"logo\":\"SplashScreen_logo__3OwCB\",\"headingContainer\":\"SplashScreen_headingContainer__v-bcb\",\"heading\":\"SplashScreen_heading__2NS4o\",\"subHeading\":\"SplashScreen_subHeading__1DFgo\",\"childContainer\":\"SplashScreen_childContainer__32GZC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeading\":\"Main_pageHeading__xxdMP\",\"expanded\":\"Main_expanded__16UNz\",\"main\":\"Main_main__3JhNz\",\"showTitle\":\"Main_showTitle__25ULg\",\"content\":\"Main_content__2K0G4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"ApiKeyModal_header__guNXp\",\"body\":\"ApiKeyModal_body__3grJm\",\"close\":\"ApiKeyModal_close__3jWU-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"runTestsPageContainer\":\"RunTestsView_runTestsPageContainer__2r9ZF\",\"newTestContainer\":\"RunTestsView_newTestContainer__2e2zZ\",\"newTest\":\"RunTestsView_newTest__3wkEM\",\"runningTests\":\"RunTestsView_runningTests__12taF\",\"buttonLink\":\"RunTestsView_buttonLink__tSO_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollContainer\":\"Nav_scrollContainer__2er9V\",\"navBar\":\"Nav_navBar__2TP14\",\"nav\":\"Nav_nav__2YH2E\",\"menuExpanded\":\"Nav_menuExpanded__11k3t\",\"bottom\":\"Nav_bottom__1tQJK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__1yc5g\",\"expanded\":\"NavBar_expanded__3ri0A\",\"loading\":\"NavBar_loading__2lKsx\",\"logo\":\"NavBar_logo__1tBWK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"NavButton_button__2iIw2\",\"selected\":\"NavButton_selected__2nXkc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ExpandButton_button__1IiX7\",\"expanded\":\"ExpandButton_expanded__5-TMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SplashScreenView_button__376p9\",\"link\":\"SplashScreenView_link__32B-5\",\"input\":\"SplashScreenView_input__3_6qj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__1TgzI\",\"container\":\"Modal_container__3Wm3u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultRow\":\"ResultsTable_resultRow____Z1G\",\"timestamp\":\"ResultsTable_timestamp__3zjnW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultsPageContainer\":\"ResultsView_resultsPageContainer__323tE\",\"buttonLink\":\"ResultsView_buttonLink__1IX_4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"mainContainer\":\"App_mainContainer__3GtbL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultLogo\":\"GlasswallLogo_defaultLogo__ZK8A_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spacer\":\"NavSpacer_spacer__8nqqV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"NavLabel_label__3v6hJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"GlasswallTable_table__3xj1I\",\"header\":\"GlasswallTable_header__1Jmue\",\"headerText\":\"GlasswallTable_headerText__2atWa\",\"td\":\"GlasswallTable_td__1JH0W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"RunningTests_table__A4zQZ\",\"header\":\"RunningTests_header__31W-E\",\"headerText\":\"RunningTests_headerText__2YPwo\",\"headerCell\":\"RunningTests_headerCell__2pdq7\",\"headerCell1\":\"RunningTests_headerCell1__ggJqW\",\"row\":\"RunningTests_row__2lzxf\",\"titleCell\":\"RunningTests_titleCell__3C1bP\",\"cell\":\"RunningTests_cell__zw85N\"};","import React from \"react\";\n\nimport styles from \"./GlasswallLogo.module.scss\";\n\nexport interface GlasswallLogoProps { className?: string }\n\nconst GlasswallLogo = (props: GlasswallLogoProps) => {\n    return (\n        <div className={props.className ? props.className : styles.defaultLogo}\n            style={{ background: `url(\"data:image/svg+xml,%3Csvg viewBox='0 0 254.33 147' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23fff'%3E%3Cpath d='M163.81 93.12l-15.86 49.22h2.92l15.87-49.22zM179.01 55.02l15.71-48.74h-2.92l-15.71 48.74zM4.13 74.11v-.08C4.13 66.32 10.14 60 18.36 60c4.89 0 7.83 1.32 10.66 3.72l-3.76 4.54c-2.09-1.74-3.96-2.75-7.1-2.75-4.34 0-7.79 3.84-7.79 8.45v.08c0 4.96 3.41 8.61 8.22 8.61 2.17 0 4.11-.54 5.62-1.63v-3.88H18.2v-5.16h11.79v11.79c-2.79 2.37-6.63 4.3-11.59 4.3-8.45 0-14.27-5.93-14.27-13.96zM34.52 60.46h5.97v21.71h13.53v5.43h-19.5zM69.06 60.27h5.5L86.19 87.6h-6.24l-2.48-6.09H65.99l-2.48 6.09h-6.09zm6.28 15.97l-3.6-8.8-3.61 8.8zM88.14 83.65l3.53-4.23c2.44 2.02 5 3.3 8.1 3.3 2.44 0 3.92-.97 3.92-2.56v-.08c0-1.51-.93-2.29-5.47-3.45-5.47-1.4-9-2.91-9-8.3v-.08c0-4.92 3.95-8.18 9.5-8.18 3.95 0 7.33 1.24 10.08 3.45l-3.1 4.5c-2.4-1.67-4.77-2.68-7.06-2.68s-3.49 1.05-3.49 2.36v.08c0 1.79 1.16 2.37 5.85 3.57 5.51 1.43 8.61 3.41 8.61 8.14v.08c0 5.39-4.11 8.41-9.97 8.41-4.09.01-8.24-1.42-11.5-4.33zM112.29 83.65l3.53-4.23c2.44 2.02 5 3.3 8.1 3.3 2.44 0 3.92-.97 3.92-2.56v-.08c0-1.51-.93-2.29-5.47-3.45-5.47-1.4-9-2.91-9-8.3v-.08c0-4.92 3.95-8.18 9.5-8.18 3.95 0 7.33 1.24 10.08 3.45l-3.1 4.5c-2.4-1.67-4.77-2.68-7.06-2.68s-3.49 1.05-3.49 2.36v.08c0 1.79 1.16 2.37 5.85 3.57 5.51 1.43 8.61 3.41 8.61 8.14v.08c0 5.39-4.11 8.41-9.97 8.41-4.09.01-8.24-1.42-11.5-4.33zM156.56 60.38h2.52l7.44 22.68 7.76-22.6h3.22l-9.69 27.34h-2.6l-7.44-22.03-7.48 22.03h-2.56l-9.69-27.34h3.33l7.76 22.6zM202.29 87.6H199l-3.18-7.17h-14.77l-3.22 7.17h-3.14l12.37-27.33h2.87zm-13.84-23.76l-6.21 13.84h12.37zM207.09 60.46h3.06v24.31h15.28v2.83h-18.34zM230.24 60.46h3.06v24.31h15.28v2.83h-18.34z'/%3E%3C/g%3E%3C/svg%3E\") no-repeat center center` }}\n            data-testid=\"logoDiv\"></div>\n    );\n};\n\nexport default GlasswallLogo;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GlasswallLogo from \"../../GlasswallLogo/GlasswallLogo\";\n\nimport styles from \"./NavBar.module.scss\";\n\nexport interface NavBarProps { logo: boolean, expanded: boolean, children: React.ReactNode }\n\nconst NavBar = (props: NavBarProps) => {\n\n    return (\n        <div className={`${styles.navBar} ${props.expanded ? styles.expanded : \"\"}`}>\n            {props.logo &&\n                <GlasswallLogo className={styles.logo} />\n            }\n\n            {props.children}\n\n        </div>\n    );\n};\n\nNavBar.propTypes = {\n    logo: PropTypes.bool\n};\n\nexport { NavBar };","import React from \"react\";\n\nimport styles from \"./Nav.module.scss\";\n\nexport interface NavProps { expanded: boolean, bottom: boolean, children?: React.ReactNode }\n\nexport type Nav = NavProps;\n\nconst Nav = (props: NavProps) => {\n    return (\n        <nav className={`${styles.nav} ${props.expanded ? styles.menuExpanded : \"\"} ${props.bottom ? styles.bottom : \"\"}`}>\n            <div className={styles.scrollContainer}>\n                <ul>\n                    {props.children}\n                </ul>\n            </div>\n        </nav>\n    );\n};\n\nexport { Nav };","import React from \"react\";\nimport styles from \"./NavButton.module.scss\";\n\nexport interface NavButtonProps { selected: boolean, clickHandler?: Function, children?: React.ReactNode }\n\nfunction NavButton(props: NavButtonProps) {\n    return (\n        <li>\n            <button\n                className={`${styles.button} ${props.selected ? styles.selected : \"\"}`}\n                onClick={() => props.clickHandler && props.clickHandler()}>{props.children}</button>\n        </li>\n    );\n}\n\nexport { NavButton };","import React from \"react\";\n\nimport styles from \"./ExpandButton.module.scss\";\n\nexport interface ExpandButtonProps { expanded: boolean, clickHandler: Function }\n\nfunction ExpandButton(props: ExpandButtonProps) {\n    return (\n        <button className={`${styles.button}  ${props.expanded ? styles.expanded : \"\"}`} onClick={() => props.clickHandler()}></button>\n    );\n}\n\nexport { ExpandButton };","import React from \"react\";\n\nimport styles from \"./NavSpacer.module.scss\";\n\nconst NavSpacer = () => {\n    return (\n        <li>\n            <div className={styles.spacer}></div>\n        </li>\n    );\n};\n\nexport { NavSpacer };","import React from \"react\";\n\nimport styles from \"./NavLabel.module.scss\";\n\nexport interface NavLabelProps {label: string};\n\nconst NavLabel = (props: NavLabelProps) => {\n\n    return (\n        <li><button className={styles.label}>{props.label}</button></li>\n    );\n};\n\nexport { NavLabel };","import React from \"react\";\n\nimport styles from \"./Main.module.scss\";\n\nexport interface MainProps {\n    expanded: boolean,\n    showTitle: boolean,\n    title?: string,\n    children: React.ReactNode\n}\n\nconst Main = (props: MainProps) => {\n\n    if (props.showTitle && (props.title === undefined || props.title === null)) {\n        console.error(\"showTitle is set to true, but no title was supplied to <Main>.\");\n    }\n\n    return (\n        <>\n            {props.showTitle &&\n                <h1 className={`${styles.pageHeading} ${props.expanded ? styles.expanded : \"\"}`}>\n                    {props.title}\n                </h1>\n            }\n\n            <div className={`${styles.main} ${props.expanded ? styles.expanded : \"\"} ${props.showTitle ? styles.showTitle : \"\"}`}>\n\n                <div className={styles.content}>\n                    {props.children}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Main;","import React from \"react\";\n\nimport GlasswallLogo from \"../GlasswallLogo/GlasswallLogo\";\n\nimport styles from \"./SplashScreen.module.scss\";\n\nexport interface SplashScreenProps { heading: string; subHeading?: string; children?: React.ReactNode; }\n\nconst SplashScreen = (props: SplashScreenProps) => {\n    return (\n        <div className={styles.splashContainer} data-testid=\"splashContainerDiv\">\n            <div className={styles.logoContainer} data-testid=\"logoContainerDiv\">\n                <GlasswallLogo className={styles.logo} />\n            </div>\n\n            <div className={styles.headingContainer} data-testid=\"headingContainerDiv\">\n                <h1 className={styles.heading}>{props.heading}</h1>\n                {props.subHeading &&\n                    <h2 className={styles.subHeading}>{props.subHeading}</h2>\n                }\n                <div className={styles.childContainer} data-testid=\"childContainerDiv\">\n                    {props.children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SplashScreen;\n","import React from \"react\";\n\nimport SplashScreen from \"../../components/SplashScreen/SplashScreen\";\n\nimport styles from \"./SplashScreenView.module.scss\";\n\nexport interface SplashScreenViewProps { changeHandler: Function, submitApiKey: Function }\n\nconst SplashScreenView = (props: SplashScreenViewProps) => {\n\n    return (\n        <SplashScreen heading=\"Rebuild API\" subHeading=\"Automated Performance Tests\">\n            <form>\n                <div>\n                    <input className={styles.input}\n                        type=\"password\"\n                        placeholder=\"Enter API Key\"\n                        onChange={e => props.changeHandler(e.target.value)} required></input>\n                </div>\n\n                <div>\n                    <button className={styles.button}\n                        type=\"submit\"\n                        onClick={e => props.submitApiKey(e)}>Submit</button>\n                </div>\n            </form>\n\n        </SplashScreen>\n    );\n};\n\nexport default SplashScreenView;","import React, { useEffect } from \"react\";\n\nexport interface ArchitectureViewProps { onLoad: Function }\n\nconst ArchitectureView = (props: ArchitectureViewProps) => {    \n\n    useEffect(() => {\n        props.onLoad(\"Architecture\");\n    });\n\n    return <div>Architecture</div>\n};\n\nexport default ArchitectureView;","import React, { useRef, useEffect, useCallback } from \"react\";\n\nexport interface ClickHandlerProps { onClickInside: Function, onClickOutside: Function, children: React.ReactNode}\n\nconst ClickHandler = (props: ClickHandlerProps) => {\n    const ref = useRef<HTMLDivElement>(null);\n\n    const onClick = useCallback((event) => {\n        if (ref.current && !ref.current.contains(event.target)) {\n            props.onClickOutside(event);\n        }\n        else {\n            props.onClickInside(event);\n        }\n    }, [props]);\n\n    useEffect(() => {\n        document.body.addEventListener(\"mousedown\", onClick, false);\n\n        return () => {\n            document.body.removeEventListener(\"mousedown\", onClick, false);\n        };\n    }, [onClick]);\n\n    return <div ref={ref}>{props.children}</div>;\n}\n\nClickHandler.defaultProps = {\n    onClickInside: () => { },\n    onClickOutside: () => { }\n};\n\nexport default ClickHandler;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ClickHandler from \"../Events/ClickHandler\";\nimport { ExitHandler } from \"react-transition-group/Transition\";\n\nimport styles from \"./Modal.module.scss\";\n\nexport interface ModalContentsProps {\n    onClickInside: Function, onClickOutside: Function, children: React.ReactNode\n}\n\nconst ModalContents = (props: ModalContentsProps) => {\n    return (\n        <div className={styles.overlay}>\n            <ClickHandler onClickInside={props.onClickInside} onClickOutside={props.onClickOutside}>\n                <section className={styles.container}>{props.children}</section>\n            </ClickHandler>\n        </div>);\n}\n\n\nexport interface ModalProps {\n    onClickInside: Function,\n    onClickOutside: Function,\n    isOpen: boolean,\n    transitionTimeout: number,\n    onExitCallback: ExitHandler<HTMLElement>,\n    children: React.ReactNode\n}\n\nconst Modal = (props: ModalProps) => {\n    const modalRoot = document.querySelector(\"#modalRoot\");\n\n    return ReactDOM.createPortal(\n        <CSSTransition\n            in={props.isOpen}\n            classNames=\"modal\"\n            timeout={props.transitionTimeout}\n            unmountOnExit\n            onExited={props.onExitCallback}>\n\n            <React.Fragment>\n                {<ModalContents\n                    {...props}\n                    onClickInside={props.onClickInside}\n                    onClickOutside={props.onClickOutside} />}\n            </React.Fragment>\n\n        </CSSTransition>,\n        modalRoot);\n}\n\nModal.defaultProps = {\n    onClickInside: () => { },\n    onClickOutside: () => { },\n    onExitCallback: () => { },\n    transitionTimeout: 300\n};\n\nexport default Modal;","import React from \"react\";\nimport styles from \"./ApiKeyModal.module.scss\";\n\nfunction Header() {\n    return <header className={styles.header}>\n               <h1>API Key</h1>\n           </header>;\n}\n\nexport default Header;","import React, { useState } from \"react\";\n\nimport styles from \"./ApiKeyModal.module.scss\";\n\nexport interface BodyProps { submitFunction: Function };\n\nfunction Body(props: BodyProps) {\n  const [apiKey, setApiKey] = useState(\"\");\n\n  return (\n    <div className={styles.body}>\n      <h2>Enter a new API Key</h2>\n\n      <form onSubmit={e => {\n        e.preventDefault(); props.submitFunction(apiKey)\n      }}>\n        <input type=\"text\"\n          placeholder=\"API Key\"\n          onChange={e => setApiKey(e.target.value)}></input>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div >\n  );\n}\n\nexport default Body;","import React from \"react\";\nimport styles from \"./ApiKeyModal.module.scss\";\n\nexport interface CloseButtonProps { closeAction: Function };\n\nfunction CloseButton(props: CloseButtonProps) {\n    return <button onClick={() => props.closeAction()} tabIndex={-1} type=\"button\" className={styles.close}></button>;\n}\n\nexport default CloseButton;","import React from \"react\";\nimport Modal from \"../Modal/Modal\";\n\nimport Header from \"./Header\";\nimport Body from \"./Body\";\nimport CloseButton from \"./CloseButton\";\n\nexport interface ApiKeyModalProps {\n    isOpen: boolean,\n    onClickInside?: Function,\n    onCloseAction: Function,\n    submitFunction: Function\n};\n\nconst ApiKeyModal = (props: ApiKeyModalProps) => {\n    return (\n        <Modal\n            isOpen={props.isOpen}\n            onClickInside={() => { }}\n            onClickOutside={props.onCloseAction}>\n\n            <Header />\n            <Body submitFunction={props.submitFunction}/>\n\n            <CloseButton closeAction={props.onCloseAction} />\n        </Modal>\n    );\n};\n\nexport default ApiKeyModal;","import React from \"react\";\n\nimport styles from \"./GlasswallTable.module.scss\";\n\nexport interface GlasswallTableProps { children: React.ReactNode };\n\nconst GlasswallTable = (props: GlasswallTableProps) => {\n    return (\n        <table className={styles.table}>\n            {props.children}\n        </table>\n    );\n};\n\nexport default GlasswallTable;","import React from \"react\";\nimport GlasswallTable from \"../../../../components/GlasswallTable/GlasswallTable\";\n\nimport styles from \"./ResultsTable.module.scss\";\n\nexport interface ResultsTableProps { results: Array<any> };\n\nconst formatTimestamp = (datetimeString: string) =>\n    new Date(datetimeString).toLocaleString().replace(\",\", \" -\");\n\nconst formatFileSize = (fileSize: number) => `${Math.floor(fileSize/1000000)} MB`;\n\nconst ResultsTable = (props: ResultsTableProps) => {\n    return (\n        <div>\n            {props.results.map(row => {\n                return (\n                    <div className={styles.resultRow} key={row.timestamp}>\n                        <div className={styles.timestamp}>\n                            {formatTimestamp(row.timestamp)}\n                        </div>\n\n                        <GlasswallTable>\n                            <thead>\n                                <tr>\n                                    <th>Filename</th>\n                                    <th>File Size</th>\n                                    <th>Detect Filetype</th>\n                                    <th>Rebuild</th>\n                                    <th>Upload</th>\n                                    <th>Download</th>\n                                    <th>Response Time</th>\n                                    <th>Engine Version</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {row.results.map((result: any) => {\n                                    return (\n                                        <tr key={result.requestId}>\n                                            <td>{result.name}</td>\n                                            <td>{formatFileSize(result.metricFilesize)}</td>\n                                            <td>{result.metricDetect}</td>\n                                            <td>{result.metricRebuild}</td>\n                                            <td>{result.metricUpload}</td>\n                                            <td>{result.metricDownload}</td>\n                                            <td>{result.responseTime}</td>\n                                            <td>{result.version}</td>\n                                        </tr>\n                                    );\n                                })\n                                }\n                            </tbody>\n                        </GlasswallTable>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default ResultsTable;","import React, { useState, useEffect, useCallback } from \"react\";\nimport ApiKeyModal from \"../../../components/ApiKeyModal/ApiKeyModal\";\nimport ResultsTable from \"./ResultsTable/ResultsTable\";\n\nimport styles from \"./ResultsView.module.scss\";\n\nexport interface ResultsViewProps {\n    apiKey: string,\n    onLoad: Function,\n    updateApiKey: Function\n}\n\nconst useMountEffect = (fun: any) => useEffect(fun, []);\n\n\n\n\nconst ResultsView = (props: ResultsViewProps) => {\n    const getResultsUrl = \"https://cqxec6akld.execute-api.eu-west-1.amazonaws.com/prod/filerebuildperformancetest/getresults\";\n\n    const [loading, setLoading] = useState(true);\n    const [results, setResults] = useState([]);\n    const [apiKeyIsInvalid, setApiKeyIsInvalid] = useState(false);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    const getResults = useCallback(async (apiKey?) => {\n        try {\n            const response = await fetch(getResultsUrl, {\n                method: \"GET\",\n                headers: {\n                    \"x-api-key\": apiKey ?? props.apiKey\n                }\n            });\n\n            let responseString = await response.json();\n\n            if (response.ok) {\n                setResults(JSON.parse(responseString));\n                setApiKeyIsInvalid(false);\n            }\n            else {\n                if (responseString.message === \"Forbidden\") {\n                    console.error(`Error ${response.status}. Invalid API Key`)\n                }\n                else {\n                    console.error(`Error ${response.status}. ${responseString}`);\n                }\n\n                setApiKeyIsInvalid(true);\n            }\n        }\n        catch (e) {\n            console.error(e);\n            setApiKeyIsInvalid(true);\n        }\n        finally {\n            setLoading(false);\n        }\n    }, [setResults, props.apiKey, setApiKeyIsInvalid, setLoading]);\n\n    useMountEffect(() => {\n        props.onLoad(\"FileRebuildPerformanceTest | Results\");\n        getResults();\n    });\n\n    const submitNewApiKey = async (newApiKey: string) => {\n        setModalIsOpen(false);\n        props.updateApiKey(newApiKey);\n        await setLoading(true);\n        getResults(newApiKey);\n    };\n\n    return (\n        <div className={styles.resultsPageContainer}>\n            <ApiKeyModal\n                isOpen={modalIsOpen}\n                onCloseAction={() => setModalIsOpen(false)}\n                submitFunction={submitNewApiKey} />\n\n            {loading &&\n                <div>Loading ... </div>\n            }\n\n            {!loading &&\n                <>\n                    {apiKeyIsInvalid &&\n                        <div>\n                            Your API Key is invalid.\n                            Click <button\n                                className={styles.buttonLink}\n                                type=\"button\"\n                                onClick={() => setModalIsOpen(true)}>here</button> to enter a new one.\n                        </div>\n                    }\n\n                    {!apiKeyIsInvalid &&\n                        <ResultsTable results={results} />\n                    }\n                </>\n            }\n        </div>\n    );\n};\n\nexport default ResultsView;","import React, { useState, useCallback, useEffect } from \"react\";\n\nimport styles from \"./RunningTests.module.scss\";\n\nexport interface RunningTestsProps { apiKey: string, url: string };\n\nconst useMountEffect = (fun: any) => useEffect(fun, []);\n\nconst RunningTests = (props: RunningTestsProps) => {\n    const [tests, setTests] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const getTests = useCallback(async (apiKey?: string) => {\n        try {\n            const response = await fetch(props.url, {\n                method: \"GET\",\n                headers: {\n                    \"x-api-key\": apiKey ?? props.apiKey\n                }\n            });\n\n            let responseString = await response.json();\n\n            if (response.ok) {\n                setTests(JSON.parse(responseString));\n            }\n            else {\n                if (responseString.message === \"Forbidden\") {\n                    console.error(`Error ${response.status}. Invalid API Key`)\n                }\n                else {\n                    console.error(`Error ${response.status}. ${responseString}`);\n                }\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n        finally {\n            setLoading(false);\n        }\n    }, [setTests, props, setLoading]);\n\n    useMountEffect(() => {\n        getTests();\n    });\n\n    return (\n        <>\n            {loading &&\n                <div>Loading ... </div>\n            }\n\n            {!loading &&\n                <table className={styles.table}>\n                    <thead>\n                        <tr>\n                            <th>Timestamp</th>\n                            <th>Status</th>\n                            <th>Task Group</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {tests.length === 0 && \n                            <tr>\n                                <td colSpan={3} style={{textAlign: \"center\"}}>No Tests Running.</td>\n                            </tr>\n                        }\n\n                        {tests.map(test => {\n                            return (\n                                <tr key={test.timestamp}>\n                                    <td>{test.timestamp}</td>\n                                    <td>{test.status}</td>\n                                    <td>{test.group}</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            }\n        </>\n    )\n};\n\nexport default RunningTests;","import React, { useEffect, useState } from \"react\";\nimport RunningTests from \"../../../components/RunningTests/RunningTests\";\nimport ApiKeyModal from \"../../../components/ApiKeyModal/ApiKeyModal\";\n\nimport styles from \"./RunTestsView.module.scss\";\n\nexport interface RunTestsViewProps { apiKey: string, onLoad: Function, updateApiKey: Function };\n\nconst RunTestsView = (props: RunTestsViewProps) => {\n    const runTestUrl = \"https://cqxec6akld.execute-api.eu-west-1.amazonaws.com/prod/filerebuildperformancetest/starttest\";\n    const getRunningTestsUrl = \"https://cqxec6akld.execute-api.eu-west-1.amazonaws.com/prod/filerebuildperformancetest/getrunningtests\";\n\n    const [loading, setLoading] = useState(false);\n    const [apiKeyIsInvalid, setApiKeyIsInvalid] = useState(false);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    const runNewTest = async () => {\n        await setLoading(true);\n\n        try {\n            const response = await fetch(runTestUrl, {\n                method: \"POST\",\n                headers: {\n                    \"x-api-key\": props.apiKey\n                },\n                body: \"{}\"\n            });\n\n            let responseString = await response.json();\n\n            if (response.ok) {\n                alert(\"Success!\");\n                setApiKeyIsInvalid(false);\n            }\n            else {\n                if (responseString.message === \"Forbidden\") {\n                    console.error(`Error ${response.status}. Invalid API Key`)\n                }\n                else {\n                    console.error(`Error ${response.status}. ${responseString}`);\n                }\n\n                setApiKeyIsInvalid(true);\n            }\n        }\n        catch (e) {\n            console.error(e);\n            setApiKeyIsInvalid(true);\n        }\n        finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        props.onLoad(\"FileRebuildPerformanceTest | Tests\");\n    }, [props]);\n\n    const submitNewApiKey = async (newApiKey: string) => {\n        setModalIsOpen(false);\n        props.updateApiKey(newApiKey);\n        //await setLoading(true);\n    };\n\n    return (\n        <div className={styles.runTestsPageContainer}>\n            <ApiKeyModal\n                isOpen={modalIsOpen}\n                onCloseAction={() => setModalIsOpen(false)}\n                submitFunction={submitNewApiKey} />\n\n            {loading &&\n                <div>Loading ... </div>\n            }\n\n            {!loading &&\n                <>\n                    {apiKeyIsInvalid &&\n                        <div>\n                            Your API Key is invalid.\n                            Click <button\n                                className={styles.buttonLink}\n                                type=\"button\"\n                                onClick={() => setModalIsOpen(true)}>here</button> to enter a new one.\n                        </div>\n                    }\n\n                    <h2>\n                        File Rebuild Performance Test <span className={styles.newTestContainer}>\n                            <svg className={styles.newTest} onClick={() => runNewTest()}></svg>\n                        </span>\n                    </h2>\n\n                    <div className={styles.runningTests}>\n                        <RunningTests apiKey={props.apiKey} url={getRunningTestsUrl}/>\n                    </div>\n                </>\n            }\n        </div>\n    );\n};\n\nexport default RunTestsView;","import React, { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport {\n    NavBar,\n    Nav,\n    NavButton,\n    ExpandButton,\n    NavSpacer,\n    NavLabel\n} from \"./components/GlasswallNav/GlasswallNav\";\nimport Main from \"./components/Main/Main\";\nimport SplashScreenView from \"./views/SplashScreenView/SplashScreenView\";\nimport ArchitectureView from \"./views/ArchitectureView/ArchitectureView\";\nimport ResultsView from \"./views/FileRebuildPerformanceTest/ResultsView/ResultsView\";\nimport RunTestsView from \"./views/FileRebuildPerformanceTest/RunTestsView/RunTestsView\";\n\nimport styles from \"./App.module.scss\";\n\nimport \"./animate.css\";\n\nconst App = () => {\n    const [apiKey, setApiKey] = useState(\"\");\n    const [apiKeyConfirmed, setApiKeyConfirmed] = useState(false);\n    const [mainTitle, setMainTitle] = useState(\"\");\n    const [navExpanded, setNavExpanded] = useState(true);\n\n    const submitApiKey = async e => {\n        e.preventDefault();\n        setApiKeyConfirmed(true);\n    };\n\n    useEffect(() => {\n        if (!apiKeyConfirmed) {\n            setApiKey(\"\");\n        }\n    }, [apiKeyConfirmed, setApiKey]);\n\n    return (\n        <div className={styles.app}>\n            <div className={styles.mainContainer}>\n                {!apiKeyConfirmed &&\n                    <SplashScreenView changeHandler={setApiKey} submitApiKey={submitApiKey} />\n                }\n\n                {apiKeyConfirmed &&\n                    <Router>\n                        <NavBar expanded={navExpanded} logo>\n                            <Nav expanded={navExpanded}>\n                                <Link to=\"/\">\n                                    <NavButton>\n                                        Architecture\n                                    </NavButton>\n                                </Link>\n\n                                <NavSpacer />\n\n                                <NavLabel label=\"FileRebuildPerformanceTest\" />\n                                <Link to=\"/filerebuilderformancetest/runtest\">\n                                    <NavButton>\n                                        Run\n                                    </NavButton>\n                                </Link>\n                                <Link to=\"/filerebuilderformancetest/results\">\n                                    <NavButton>\n                                        Test Results\n                                    </NavButton>\n                                </Link>\n                            </Nav>\n\n                            <Nav expanded={navExpanded} bottom>\n                                <Link to=\"/\">\n                                    <NavButton clickHandler={() => setApiKeyConfirmed(false)}>\n                                        Logout\n                                    </NavButton>\n                                </Link>\n                            </Nav>\n\n                            <ExpandButton\n                                expanded={navExpanded}\n                                clickHandler={() => setNavExpanded(!navExpanded)} />\n                        </NavBar>\n\n                        <Main expanded={navExpanded} showTitle title={mainTitle}>\n                            <Switch>\n                                <Route exact path=\"/\">\n                                    <ArchitectureView onLoad={setMainTitle} />\n                                </Route>\n\n                                <Route path=\"/filerebuilderformancetest/results\">\n                                    <ResultsView\n                                        onLoad={setMainTitle}\n                                        apiKey={apiKey}\n                                        updateApiKey={setApiKey} />\n                                </Route>\n\n                                <Route path=\"/filerebuilderformancetest/runtest\">\n                                    <RunTestsView\n                                        onLoad={setMainTitle}\n                                        apiKey={apiKey}\n                                        updateApiKey={setApiKey} />\n                                </Route>\n\n                            </Switch>\n                        </Main>\n                    </Router>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.scss\";\nimport \"./normalize.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}